<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on etherealzoom</title><link>https://etherealzoom.github.io/blog/post/</link><description>Recent content in Posts on etherealzoom</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>etherealzoom</copyright><lastBuildDate>Wed, 09 Jul 2025 23:06:03 +0800</lastBuildDate><atom:link href="https://etherealzoom.github.io/blog/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Quantization</title><link>https://etherealzoom.github.io/blog/p/quantization/</link><pubDate>Wed, 09 Jul 2025 23:06:03 +0800</pubDate><guid>https://etherealzoom.github.io/blog/p/quantization/</guid><description>&lt;h2 id="疑惑">疑惑
&lt;/h2>&lt;h3 id="pytorch平台上对rwkv的困惑度计算模块进行量化的经历">Pytorch平台上对RWKV的困惑度计算模块进行量化的经历
&lt;/h3>&lt;p>Q:更稳妥的方式是在模型加载和量化后，将整个模型转为float32，再量化后转换成float32的目的是什么呢，这样不是把原来量化好的给毁了吗&lt;br>
A：&lt;/p>
&lt;h4 id="pytorch上量化做了什么">pytorch上量化做了什么
&lt;/h4>&lt;p>当调用torch.quantization.quantize_dynamic时，PyTorch并不仅仅是把权重张量的数据类型（dtype）改了一下。它做了一件更根本的事：它将模型中的标准nn.Linear层替换成了一个全新的、专门的模块，叫做DynamicQuantizedLinear。&lt;br>
在这个新的DynamicQuantizedLinear模块内部，权重确实被压缩并以**torch.qint8（8位整型）**的格式存储了起来。&lt;br>
同时，这个模块还保存了将这些INT8整数反量化回浮点数所需的缩放因子（scale）和零点（zero-point）（它们是浮点数）。&lt;/p>
&lt;h4 id="totorchfloat32-到底做了什么">.to(torch.float32) 到底做了什么？
&lt;/h4>&lt;p>当您对一个模型调用.to(dtype)方法时，PyTorch会遍历模型的所有参数（parameters）和缓冲区（buffers），并尝试将它们的类型转换为您指定的dtype。&lt;br>
这里的关键在于：.to() 方法只会转换浮点类型的张量（例如 bfloat16, float16, float64）。&lt;br>
它会跳过那些已经是**整型（Integer）**的张量，比如我们量化后存储为torch.qint8的权重。
因此，INT8权重本身保持不变，量化的成果得以保留。&lt;/p>
&lt;h4 id="那我们为什么要执行这个转换呢">那我们为什么要执行这个转换呢？
&lt;/h4>&lt;p>这个操作的目的，正是为了解决您在上一个问题中遇到的 &lt;code>RuntimeError: expected scalar type Float but found BFloat16&lt;/code> 错误。&lt;br>
让我们回顾一下当时的情况：&lt;br>
(1)&lt;strong>原始模型&lt;/strong>：您加载模型时，因为设置了&lt;code>'dataformat': 'bf16'&lt;/code>，所以模型中所有的浮点参数都是&lt;code>bfloat16&lt;/code>类型。这包括&lt;code>Embedding&lt;/code>层、&lt;code>LayerNorm&lt;/code>层，以及&lt;code>Linear&lt;/code>层的权重和偏置。
(2)&lt;strong>量化之后&lt;/strong>：&lt;code>quantize_dynamic&lt;/code>函数只替换了&lt;code>Linear&lt;/code>层。但是，模型中的&lt;strong>其他层&lt;/strong>（如&lt;code>Embedding&lt;/code>和&lt;code>LayerNorm&lt;/code>）的参数&lt;strong>依然是&lt;code>bfloat16&lt;/code>类型&lt;/strong>。
(3)&lt;strong>冲突发生&lt;/strong>：当数据流经模型时，&lt;code>Embedding&lt;/code>层输出一个&lt;code>bfloat16&lt;/code>的张量，这个张量被送入到我们新替换的&lt;code>DynamicQuantizedLinear&lt;/code>层。然而，这个量化层的CPU后端实现&lt;strong>期望接收一个标准的&lt;code>float32&lt;/code>张量&lt;/strong>作为输入，而不是&lt;code>bfloat16&lt;/code>。于是，类型不匹配，程序崩溃。&lt;/p>
&lt;p>&lt;strong>所以，调用&lt;code>model.to(torch.float32)&lt;/code>的真正目的，是将模型中&lt;/strong>除了INT8权重之外的所有其他浮点参数和缓冲区**（比如仍然是&lt;code>bfloat16&lt;/code>格式的&lt;code>Embedding&lt;/code>层或&lt;code>LayerNorm&lt;/code>层）全部统一转换为标准的&lt;code>float32&lt;/code>格式。&lt;/p>
&lt;p>&lt;strong>总结一下，这个操作可以理解为一次“内务整理”：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>INT8权重&lt;/strong>： untouchable，保持量化状态。&lt;/li>
&lt;li>&lt;strong>其他所有浮点部分（&lt;code>bfloat16&lt;/code>）&lt;/strong>：全部转换为&lt;code>float32&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>这样一来，整个模型的数据流就统一了：非量化层输出&lt;code>float32&lt;/code>张量，量化层接收&lt;code>float32&lt;/code>张量，内部进行计算，从而完美解决了类型冲突的问题，同时保留了INT8量化带来的内存节省优势。&lt;/p>
&lt;h4 id="python中的enumereate">python中的enumereate
&lt;/h4>&lt;p>(1) 没有 &lt;code>enumerate&lt;/code> 的情况
您的原始循环是这样的：
&lt;code>for begin_loc in tqdm(range(0, 1536, 512)):&lt;/code>&lt;/p>
&lt;p>这个循环会执行三次，在每一次循环中：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>第1次循环&lt;/strong>：&lt;code>begin_loc&lt;/code> 的值是 &lt;strong>0&lt;/strong>&lt;/li>
&lt;li>&lt;strong>第2次循环&lt;/strong>：&lt;code>begin_loc&lt;/code> 的值是 &lt;strong>512&lt;/strong>&lt;/li>
&lt;li>&lt;strong>第3次循环&lt;/strong>：&lt;code>begin_loc&lt;/code> 的值是 &lt;strong>1024&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>可以看到，这个循环只提供了一个变量 &lt;code>begin_loc&lt;/code>。&lt;/p>
&lt;p>(2) 加入 &lt;code>enumerate&lt;/code> 之后的情况&lt;/p>
&lt;p>您修改后的正确循环是这样的：
&lt;code>for idx, begin_loc in enumerate(tqdm(range(0, 1536, 512))):&lt;/code>&lt;/p>
&lt;p>这个循环同样会执行三次，在每一次循环中：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>第1次循环&lt;/strong>：&lt;code>idx&lt;/code> 的值是 &lt;strong>0&lt;/strong>，&lt;code>begin_loc&lt;/code> 的值是 &lt;strong>0&lt;/strong>&lt;/li>
&lt;li>&lt;strong>第2次循环&lt;/strong>：&lt;code>idx&lt;/code> 的值是 &lt;strong>1&lt;/strong>，&lt;code>begin_loc&lt;/code> 的值是 &lt;strong>512&lt;/strong>&lt;/li>
&lt;li>&lt;strong>第3次循环&lt;/strong>：&lt;code>idx&lt;/code> 的值是 &lt;strong>2&lt;/strong>，&lt;code>begin_loc&lt;/code> 的值是 &lt;strong>1024&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>结论
通过对比可以清晰地看到：&lt;br>
&lt;strong>核心变量 &lt;code>begin_loc&lt;/code> 的值完全没变&lt;/strong>：在每次对应的循环中，&lt;code>begin_loc&lt;/code> 得到的值和原来一模一样，都是 &lt;code>0, 512, 1024, ...&lt;/code>。所以您循环内部使用 &lt;code>begin_loc&lt;/code> 的所有逻辑都不会受到任何影响。&lt;br>
&lt;strong>循环次数完全没变&lt;/strong>：&lt;code>range&lt;/code> 函数生成多少个数字，循环就会执行多少次。&lt;code>enumerate&lt;/code> 不会增加或减少循环的次数。&lt;br>
&lt;strong>唯一的改变&lt;/strong>：&lt;code>enumerate&lt;/code> 只是为您&lt;strong>额外提供&lt;/strong>了一个从0开始的计数器变量 &lt;code>idx&lt;/code>。这个变量正是您在 &lt;code>print&lt;/code> 语句中所需要的，它解决了 &lt;code>NameError&lt;/code>，并且让您能方便地知道当前是第几步循环。&lt;br>
所以，加入 &lt;code>enumerate&lt;/code> 是一个纯粹的“增强”操作，它在不干扰原有功能的基础上，安全地添加了您需要的新功能（即步数索引）。这是在Python中进行带索引循环的标准且推荐的做法。&lt;/p>
&lt;h4 id="如果计算rwkv中的困惑度的呢">如果计算RWKV中的困惑度的呢
&lt;/h4>&lt;p>核心思想是**“对比每一个字（Token）的输出与下一个真实字的关系”**&lt;br>
RWKV的困惑度计算的核心代码（先计算loss）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">no_grad&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logits&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forward_parallel_slices&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">slice_len&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loss&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cross_entropy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">logits&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">view&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">logits&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">output&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="只进行推理计算不计算梯度--二者有什么区别吗">只进行推理计算，不计算梯度 二者有什么区别吗
&lt;/h4>&lt;p>训练是为了教会模型，而推理是为了使用已经教好的模型&lt;br>
当然有，这两种模式在计算流程、资源消耗和最终目的上有着本质的区别。&lt;/p>
&lt;p>简单来说，&lt;strong>训练&lt;/strong>是为了&lt;strong>教会&lt;/strong>模型，而&lt;strong>推理&lt;/strong>是为了&lt;strong>使用&lt;/strong>已经教好的模型。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">特性 (Characteristic)&lt;/th>
&lt;th style="text-align: left">训练模式 (Training Mode)&lt;/th>
&lt;th style="text-align: left">推理模式 (Inference Mode)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>核心目标&lt;/strong>&lt;/td>
&lt;td style="text-align: left">&lt;strong>学习和优化&lt;/strong>模型参数（权重），让模型变得更“聪明”。&lt;/td>
&lt;td style="text-align: left">&lt;strong>使用&lt;/strong>已训练好的模型对新数据进行&lt;strong>预测&lt;/strong>和&lt;strong>评估&lt;/strong>。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>计算流程&lt;/strong>&lt;/td>
&lt;td style="text-align: left">&lt;strong>前向传播 + 反向传播&lt;/strong> (Forward Pass + Backward Pass)&lt;/td>
&lt;td style="text-align: left">&lt;strong>仅有前向传播&lt;/strong> (Forward Pass ONLY)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>梯度计算&lt;/strong>&lt;/td>
&lt;td style="text-align: left">&lt;strong>必须计算梯度&lt;/strong>。梯度是反向传播的核心，它告诉每个权重应该如何调整才能减小误差（loss）。&lt;/td>
&lt;td style="text-align: left">&lt;strong>完全不需要计算梯度&lt;/strong>。因为模型参数是固定的，我们不打算更新它，所以计算梯度就成了不必要的开销。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>内存占用&lt;/strong>&lt;/td>
&lt;td style="text-align: left">&lt;strong>高&lt;/strong>。为了能够进行反向传播，PyTorch需要构建一个“计算图”，并&lt;strong>保存所有中间步骤的计算结果&lt;/strong>（激活值）。这会占用大量内存。&lt;/td>
&lt;td style="text-align: left">&lt;strong>低&lt;/strong>。因为不需要反向传播，PyTorch可以&lt;strong>用完一个中间结果后立即丢弃&lt;/strong>，无需为计算图保存任何额外信息，大大节省了内存。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>计算速度&lt;/strong>&lt;/td>
&lt;td style="text-align: left">&lt;strong>慢&lt;/strong>。既要跑一遍前向传播，又要跑一遍更复杂的反向传播。&lt;/td>
&lt;td style="text-align: left">&lt;strong>快&lt;/strong>。只执行一次前向传播，省去了所有与梯度相关的计算。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>在PyTorch中的体现&lt;/strong>&lt;/td>
&lt;td style="text-align: left">默认模式。执行&lt;code>loss.backward()&lt;/code>和&lt;code>optimizer.step()&lt;/code>来更新权重。&lt;/td>
&lt;td style="text-align: left">使用&lt;code>with torch.no_grad():&lt;/code>代码块包裹。同时常配合&lt;code>model.eval()&lt;/code>来关闭Dropout等只在训练时使用的层。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>因此，在计算困惑度时，使用 &lt;code>with torch.no_grad():&lt;/code> 是一个重要的优化步骤，它能让评估过程变得更快、更节省资源。&lt;/p></description></item><item><title>从Xring O1说开来</title><link>https://etherealzoom.github.io/blog/p/%E4%BB%8Exring-o1%E8%AF%B4%E5%BC%80%E6%9D%A5/</link><pubDate>Wed, 09 Jul 2025 21:56:37 +0800</pubDate><guid>https://etherealzoom.github.io/blog/p/%E4%BB%8Exring-o1%E8%AF%B4%E5%BC%80%E6%9D%A5/</guid><description>&lt;h2 id="玄戒o1芯片架构">玄戒O1芯片架构
&lt;/h2>&lt;h3 id="芯片基础">芯片基础
&lt;/h3>&lt;p>&lt;em>&lt;strong>CPU:&lt;/strong>&lt;/em> 基于ARMv9.2指令集架构的Cortex CPU集群&lt;br>
&lt;em>&lt;strong>GPU:&lt;/strong>&lt;/em> ARM的Immortalis GPU IP&lt;br>
&lt;em>&lt;strong>系统级设计:&lt;/strong>&lt;/em> 玄戒O1芯片的互联技术采用了ARM的CoreLink系统IP
&lt;img src="https://raw.githubusercontent.com/etherealzoom/blog_img/main/Pic/20250709222546138.png"
loading="lazy"
alt="SoC Architecture"
>&lt;/p>
&lt;h3 id="cpu架构">CPU架构
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>十核四丛集设计&lt;br>
Cortex-X925 3.9GHz *2&lt;br>
-&amp;gt; 最高主频达3.9GHz，表现超越业界标准设计，是小米玄戒团队通过大量创新和数百次版图迭代优化的结果&lt;br>
Cortex-A725 3.4GHz *4&lt;br>
Cortex-A725 1.9GHz *2&lt;br>
Cortex-A520 1.8GHz *2&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ultra-fast Micro Control Unit-on chip&lt;br>
在硬件上实现对各个核的调度&lt;/p>
&lt;/li>
&lt;li>
&lt;p>缓存结构&lt;br>
&lt;em>数据保存的位置离使用的位置越近，性能越高，降低延迟核功耗&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>玄戒团队三个提高主频的方法&lt;br>
(1) 优化供电网络设计：边缘供电+空间组网&lt;br>
玄戒团队将主供电单元移到SoC两侧，缩短逻辑单元的物理距离&lt;br>
(2) 自研多种3nm标准单元Std Cell&lt;br>
(3) 电路版图全链路迭代优化+人工精调&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="npu">NPU
&lt;/h3>&lt;p>玄戒O1内置6核NPU，集成Scalar标量加速器、Vector矢量加速器和Tensor张量加速器，NPU算力可达44 TOPS ，支持多算法并行计算。在拍摄时，可并行“拍照”和“预览”算法，不仅满足计算摄影的影像算法需求，更针对小米自有的端侧模型进行了硬件底层的深度定制。&lt;br>
配合全新第三代小米端侧模型，AI处理速度更快，同时功耗更低，使手机在智能语音助手、图像识别、智能场景优化等AI应用方面表现更加出色。&lt;/p>
&lt;h3 id="isp">ISP
&lt;/h3>&lt;p>xiaomi自研第四代ISP单元&lt;/p>
&lt;h2 id="芯片设计开发流程">芯片设计开发流程
&lt;/h2>&lt;h3 id="total">Total
&lt;/h3>&lt;p>定义与架构设计 -&amp;gt;&lt;br>
Design, Verification, Logic Synthesis, STA, DFT (前端设计) -&amp;gt;&lt;br>
版图规划, 布局布线, 寄生参数提取和时序分析, 版图物理验证 (后端设计) -&amp;gt;&lt;br>
生成GDSII文件, Tape-out流片&lt;/p>
&lt;h3 id="第一阶段定义与架构设计前端设计的起点">&lt;strong>第一阶段：定义与架构设计（前端设计的起点）&lt;/strong>
&lt;/h3>&lt;p>这是将市场需求转化为技术规格的阶段，决定了芯片“做什么”和“怎么做”。&lt;/p>
&lt;p>&lt;strong>1. 市场需求与规格定义 (Specification)&lt;/strong>&lt;br>
一切始于一个问题：“我们要做一颗什么样的芯片？” 产品经理和市场团队会根据目标应用提出需求，定义芯片需要达到的核心指标，即&lt;strong>PPA&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>性能 (Performance)&lt;/strong>：例如，CPU主频要达到多少GHz，AI算力要达到多少TOPS。&lt;/li>
&lt;li>&lt;strong>功耗 (Power)&lt;/strong>：待机功耗、峰值功耗的上限是多少毫瓦。&lt;/li>
&lt;li>&lt;strong>面积 (Area)&lt;/strong>：芯片的物理尺寸有多大，这直接关系到成本。&lt;/li>
&lt;/ul>
&lt;p>最终会输出一份详尽的《产品规格说明书》。&lt;/p>
&lt;p>&lt;strong>2. 架构设计 (Architecture Design)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>选择核心IP&lt;/strong>：是自研CPU/GPU，还是向ARM、Synopsys等公司购买现成的IP核？&lt;/li>
&lt;li>&lt;strong>划分功能模块&lt;/strong>：将芯片划分为不同的功能单元，如计算模块、存储模块、接口模块（USB, PCIe）等。&lt;/li>
&lt;li>&lt;strong>设计总线结构&lt;/strong>：确定这些模块之间如何高效地通信。&lt;/li>
&lt;li>&lt;strong>建立系统模型&lt;/strong>：使用SystemC等语言对整个系统进行建模和仿真，初步验证架构的可行性，并对PPA进行早期评估。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="第二阶段数字前端设计与验证从想法到代码">&lt;strong>第二阶段：数字前端设计与验证（从想法到代码）&lt;/strong>
&lt;/h3>&lt;p>这是将架构思想转化为具体硬件描述代码，并确保其功能正确性的核心阶段。&lt;strong>在整个芯片开发中，验证占据了约70%的时间和资源&lt;/strong>，其重要性不言而喻。&lt;/p>
&lt;p>&lt;strong>1. RTL设计 (Register-Transfer Level Design)&lt;/strong>&lt;br>
使用HDL(&lt;strong>Verilog&lt;/strong>等)，将每个模块的具体功能以代码形式描述出来。&lt;br>
&lt;em>&lt;strong>RTL&lt;/strong>&lt;/em>是一种设计思想和抽象层次, 描述的是数据在寄存器之间的流动和处理方式。&lt;br>
&lt;code>将一个复杂的数字系统，看作是一系列在时钟信号驱动下，数据在寄存器之间进行传输和处理的过程。它描述了在某个时间点，什么数据，从哪里，经过什么运算，传送到了哪里。&lt;/code>&lt;br>
&lt;em>&lt;strong>HDL&lt;/strong>&lt;/em>是将RTL思想用一种标准化的代码形式写出来。s&lt;/p>
&lt;p>&lt;strong>2. 功能验证 (Functional Verification)&lt;/strong>&lt;br>
验证工程师用尽一切办法证明RTL设计是错误的直至没有错误。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>搭建验证平台&lt;/strong>：使用SystemVerilog和UVM等行业标准，建立一个复杂的测试环境。&lt;/li>
&lt;li>&lt;strong>编写测试用例&lt;/strong>：通过定向测试和随机测试，模拟各种可能的用户场景和极端（Corner Case）条件。&lt;/li>
&lt;li>&lt;strong>仿真与调试&lt;/strong>：在EDA仿真工具（如Synopsys VCS, Cadence Xcelium）中运行测试用例，将RTL代码的输出与预期结果进行比对，找出并修复Bug。这是一个漫长且不断迭代的过程。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>3. 逻辑综合 (Logic Synthesis)&lt;/strong>&lt;br>
验证通过的RTL代码，需要从行为描述转化为实际的电路结构。逻辑综合工具（如Synopsys Design Compiler）会自动将RTL代码翻译成&lt;strong>门级网表（Gate-Level Netlist）&lt;/strong>。在此阶段，需要设定时序、功耗和面积的约束，工具会尽力在满足这些约束的前提下进行优化。&lt;/p>
&lt;p>&lt;strong>4. 静态时序分析 (STA) 与等价性检查&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>静态时序分析&lt;/strong>：确保信号能在时钟的驱动下，在指定的时间内从一个触发器稳定地传到下一个触发器，满足时序要求。&lt;/li>
&lt;li>&lt;strong>等价性检查&lt;/strong>：形式化验证的一种，确保综合后的门级网表在逻辑功能上与原始的RTL代码完全一致。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>STA 的核心目标是：确保芯片能跑得够快。&lt;/strong>&lt;/p>
&lt;p>它是一种验证方法，用于检查数字电路中的所有信号是否能在规定的时间内，从一个寄存器（触发器）稳定地传输到下一个寄存器，从而满足芯片的设计频率要求。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>工作方式&lt;/strong>：STA 工具会分析电路中成千上万条逻辑路径，计算信号在每条路径上的传输延迟。它不关心信号的具体逻辑功能（是0还是1），只关心信号的传播速度。&lt;/li>
&lt;li>&lt;strong>检查内容&lt;/strong>：
&lt;ul>
&lt;li>&lt;strong>建立时间违例 (Setup Violation)&lt;/strong>：信号到达得&lt;strong>太慢&lt;/strong>了，在下一个时钟周期到来时还没准备好，会导致数据采样错误。这是决定芯片最高能跑多快的关键。&lt;/li>
&lt;li>&lt;strong>保持时间违例 (Hold Violation)&lt;/strong>：信号变化得&lt;strong>太快&lt;/strong>了，旧数据没保持足够长的时间，干扰了新数据的稳定，同样会导致错误。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>地位&lt;/strong>：STA 是数字后端设计（物理设计）流程中的关键“签核 (Sign-off)”步骤之一。只有通过了 STA，才能确保芯片的时序性能达标。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>5. 可测试性设计DFT (Design For Testability)&lt;/strong>&lt;/p>
&lt;p>DFT的核心目标是：确保芯片造出来之后是“好”的还是“坏”的，并且能快速地找出的坏点。一颗芯片包含数十亿个晶体管，在制造过程中，难免会出现各种微小的物理缺陷（如短路、断路）。如果不对芯片进行测试，就无法保证交付给客户的产品是功能完好的。&lt;br>
DFT 就是在设计阶段，预先在电路中&lt;strong>植入一些额外的“测试专用”逻辑&lt;/strong>，使得芯片在生产出来后，能够方便、高效地被自动化测试设备（ATE）进行大规模测试。&lt;br>
可以把 DFT 想象成给一个复杂的建筑物预先设计好了&lt;strong>检修通道和传感器接口&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>工作方式&lt;/strong>：DFT工程师会在芯片中插入“扫描链（Scan Chains）”，将成千上万个内部的寄存器连接成一条或多条长长的“串珠”，这样测试设备就可以像移位寄存器一样，从外部灌入测试码，并读出内部状态，极大地提高了内部节点的可控性和可观测性。&lt;/li>
&lt;li>&lt;strong>主要技术&lt;/strong>：
&lt;ul>
&lt;li>&lt;strong>扫描链设计 (Scan Chain)&lt;/strong>：将内部状态“暴露”出来。&lt;/li>
&lt;li>&lt;strong>内建自测试 (BIST, Built-in Self-Test)&lt;/strong>：让芯片的一部分电路（如内存）能够自己测试自己，生成测试码并验证结果。&lt;/li>
&lt;li>&lt;strong>自动测试码生成 (ATPG)&lt;/strong>：使用工具自动生成能够最大程度覆盖各种潜在物理缺陷的测试码。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>地位&lt;/strong>：DFT 是连接设计与制造和量产的关键环节。好的 DFT 设计能显著降低测试成本、提高产品良率、并帮助快速定位失效原因。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>ASIC 与 FPGA 的岔路口&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>ASIC&lt;/strong>：我们目前描述的流程主要针对ASIC。它的目标是设计一款功能固定、性能和功耗最优的定制芯片，适用于大规模量产。&lt;/li>
&lt;li>&lt;strong>FPGA&lt;/strong>：如果项目追求快速上市或产量不大，可以选择FPGA。FPGA内部有预先制造好的逻辑单元和布线资源。其流程在RTL和功能验证后，跳过了复杂的物理设计，直接使用FPGA厂商（如Xilinx/AMD）提供的工具进行综合、布局布线，并生成一个Bitstream烧录到芯片中。开发周期短、成本低，但性能和功耗通常不如同等功能的ASIC。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;hr>
&lt;h3 id="第三阶段数字后端设计物理设计从代码到版图">&lt;strong>第三阶段：数字后端设计/物理设计（从代码到版图）&lt;/strong>
&lt;/h3>&lt;p>这是将抽象的门级网表转化为具体的、可供制造的物理版图的过程，是连接设计与制造的桥梁。&lt;/p>
&lt;p>&lt;strong>1. 版图规划 (Floorplanning)&lt;/strong>&lt;br>
规划芯片的宏观布局，包括确定芯片的核心区域大小，放置IO引脚，以及摆放CPU、SRAM等大型模块的预留位置。&lt;/p>
&lt;p>&lt;strong>2. 布局与布线 (Placement &amp;amp; Routing)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>布局&lt;/strong>：EDA工具（如Synopsys IC Compiler, Cadence Innovus）会将数百万个标准逻辑单元精确地放置到规划好的区域内。&lt;/li>
&lt;li>&lt;strong>时钟树综合 (CTS)&lt;/strong>：生成一个能将时钟信号同步、低延迟地传送到芯片上所有触发器的网络。&lt;/li>
&lt;li>&lt;strong>布线&lt;/strong>：用金属导线将所有单元根据网表的连接关系连接起来。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>3. 签核 (Sign-off)&lt;/strong>&lt;/p>
&lt;p>在将最终设计成果交付给晶圆厂之前，必须进行一系列严格的最终检查，确保万无一失。这个过程被称为“签核”。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>DRC (设计规则检查)&lt;/strong>：确保版图符合晶圆厂的制造工艺规则，比如导线最小宽度、最小间距等。&lt;/li>
&lt;li>&lt;strong>LVS (版图与原理图对比)&lt;/strong>：确保最终版图的电路连接关系与综合后的门级网表完全一致。&lt;/li>
&lt;li>&lt;strong>寄生参数提取与时序分析&lt;/strong>：从版图中提取实际的电阻、电容等寄生参数，进行最终的、最精确的静态时序分析，确保芯片在实际物理效应下依然满足性能要求。&lt;/li>
&lt;/ul>
&lt;p>当所有检查都通过后，设计数据（GDSII）将被正式“&lt;strong>流片（Tape-out）&lt;/strong>”，传送给芯片代工厂。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>关于模拟电路设计&lt;/strong>&lt;/p>
&lt;p>值得一提的是，SoC中通常还包含模拟电路（如电源管理、锁相环PLL、数模转换器ADC等）。模拟电路的设计流程与数字电路截然不同，它更像一门“艺术”，高度依赖工程师的经验。其设计过程以晶体管级的电路图设计和SPICE仿真为主，版图设计通常需要手动绘制，对寄生效应极其敏感，是一个不断仿真、调整、再仿真的迭代过程。&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="第四阶段制造封测与验证">&lt;strong>第四阶段：制造、封测与验证&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>1. 芯片制造 (Fabrication)&lt;/strong>
晶圆厂接手GDSII数据后，开始在纯净的硅晶圆上，通过光刻、刻蚀、离子注入、薄膜沉积等数百道极其复杂的工序，层层叠加，最终形成设计好的电路结构。这个过程通常需要数月时间。&lt;/p>
&lt;p>&lt;strong>2. 封装与测试 (Packaging &amp;amp; Testing)&lt;/strong>
制造完成的晶圆会被切割成一个个独立的芯片裸片Die。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>封装&lt;/strong>：将脆弱的裸片固定在基板上，并连接好与外部电路板通信的引脚，最后用绝缘外壳保护起来，形成我们日常见到的芯片模样。&lt;/li>
&lt;li>&lt;strong>测试&lt;/strong>：对封装好的芯片进行功能和性能测试，剔除在制造或封装过程中产生的次品。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>3. 投产后验证 (Post-Silicon Validation)&lt;/strong>&lt;br>
第一批流片回来的芯片会被送到实验室，在真实的硬件环境中进行上电和测试。这个阶段旨在发现那些在仿真环境中难以暴露的、与真实物理世界交互的Bug，并对芯片的各项性能指标进行最终的实测验证。&lt;/p>
&lt;p>经过这一系列严苛的流程，一颗合格的芯片才算真正诞生，准备投入大规模生产，并最终进入到消费者的电子产品中。&lt;/p>
&lt;p>&lt;em>&lt;strong>References.&lt;/strong>&lt;/em>&lt;br>
[1] &lt;a class="link" href="https://www.bilibili.com/video/BV18sJHz5ENR/?share_source=copy_web&amp;amp;vd_source=9ffe3740cc87c3869a8fd1a2a7aa9ac5" target="_blank" rel="noopener"
>极客湾&lt;/a>&lt;br>
[2] &lt;a class="link" href="https://www.bilibili.com/video/BV1yB7aztECc/?share_source=copy_web&amp;amp;vd_source=9ffe3740cc87c3869a8fd1a2a7aa9ac5" target="_blank" rel="noopener"
>老石谈芯&lt;/a>&lt;/p></description></item><item><title>Git_Use</title><link>https://etherealzoom.github.io/blog/p/git_use/</link><pubDate>Tue, 08 Jul 2025 02:15:15 +0800</pubDate><guid>https://etherealzoom.github.io/blog/p/git_use/</guid><description>&lt;h2 id="常用命令">&lt;strong>常用命令&lt;/strong>
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># 初始化一个本地仓库
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">init&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># 添加所有文件到暂存区
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># 提交暂存区的文件到本地仓库，并添加一条提交信息
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">commit&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="s">&amp;#34;first commit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># 添加一个远程仓库的地址，命名为origin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">remote&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="n">origin&lt;/span> &lt;span class="nl">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//github.com/user/repo.git
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp"># 将本地仓库的内容推送到远程仓库的master分支
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">push&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">u&lt;/span> &lt;span class="n">origin&lt;/span> &lt;span class="n">master&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#查看当前缓存区的all内容
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">ls&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">files&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#上传文件夹里面的所有文件，添加子文件夹及其内容至暂存区
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="err">使用`&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">add&lt;/span>&lt;span class="err">`命令，配合递归通配符`&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">`来添加子文件夹及其内部的所有文件。假设子文件夹名为`&lt;/span>&lt;span class="n">subfolder&lt;/span>&lt;span class="err">`，执行：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">git&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="n">subfolder&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#delete a cangku 的所有提交记录
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#查看当前分支数量以及名称
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">branch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#创建一个新的孤立分支，并切换到该分支
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">checkout&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">orphan&lt;/span> &lt;span class="n">latest_branch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#删除原来的master分支
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">branch&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">D&lt;/span> &lt;span class="n">master&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#重命名当前分支为main
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">branch&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="n">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#强制推送当前分支到远程仓库, 覆盖原仓库的所有东西且**该操作不可逆**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">push&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">f&lt;/span> &lt;span class="n">origin&lt;/span> &lt;span class="n">main&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="git用户资料">Git用户资料
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//显示差异摘要（每个提交修改的文件及行数统计）：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">log&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;当前用户名&amp;#34;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">stat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//以图形化方式展示分支历史
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">log&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;当前用户名&amp;#34;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">graph&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//- 显示完整的提交消息：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">log&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;当前用户名&amp;#34;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">pretty&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nl">format&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">&amp;#34;%h %s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="git文件恢复">git文件恢复
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//没有add的文件恢复，一个一个恢复
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">checkout&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">文件名&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//有add，无commit
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">checkout&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">commit&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="err">文件名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#id使用git log查看
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//已经commit
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">checkout&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">commit&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="err">文件名&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/etherealzoom/blog_img/main/Pic/Git_Flow.png"
loading="lazy"
>&lt;/p>
&lt;p>知识点&lt;/p>
&lt;ol>
&lt;li>哈希值&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">f7cafda&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">HEAD&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">master&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="err">重新提交有关&lt;/span>&lt;span class="n">tc264开发的相关资料&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d01e0e1&lt;/span> &lt;span class="err">提交有关&lt;/span>&lt;span class="n">tc264开发的相关资料&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">前面的一串数字是什么意思&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">答：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">前面的一串数字是哈希值，它是一个由&lt;/span> &lt;span class="mi">40&lt;/span> &lt;span class="err">个十六进制字符组成的字符串，用来唯一标识每一次提交。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Git&lt;/span> &lt;span class="err">通过计算提交的内容、作者、日期等信息的&lt;/span> &lt;span class="n">SHA&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="err">散列值来生成这个哈希值&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>(HEAD -&amp;gt; master)是什么&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="err">答：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="n">HEAD&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">master&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">是&lt;/span>&lt;span class="n">Git中的一种表示方式&lt;/span>&lt;span class="err">，它表示&lt;/span>&lt;span class="n">HEAD指向master分支&lt;/span>&lt;span class="err">，而&lt;/span>&lt;span class="n">master分支指向最新的提交&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="n">HEAD是一个特殊的引用&lt;/span>&lt;span class="err">，它总是指向当前的提交，而&lt;/span>&lt;span class="n">master是一个普通的分支&lt;/span>&lt;span class="err">，它可以指向任何一个提交。当你在&lt;/span>&lt;span class="n">master分支上进行提交时&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="nf">HEAD和master都会移动到最新的提交上&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nl">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//zhuanlan.zhihu.com/p/40001702)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">关于&lt;/span>&lt;span class="n">Git分支中HEAD和Master的理解&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nl">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//zhuanlan.zhihu.com/p/40001702)[: 关于Git分支中HEAD和Master的理解 - 知乎](https://www.jianshu.com/p/4219b6f62ce3)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>解释git push -u origin master&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>git是一个分布式版本控制系统，可以用来管理和协作项目的源代码。&lt;br>
push是一个git子命令，它的作用是将本地仓库的内容推送到远程仓库的指定分支。&lt;br>
-u是一个参数，它的全称是–set-upstream，它的作用是设置默认的上游分支，也就是当你在本地仓库执行git pull或git push时，不需要指定远程仓库和分支名，git会自动使用你设置的上游分支。&lt;br>
origin是一个远程仓库的名称，它是git默认给你添加的远程仓库的别名，你可以使用git remote命令来查看或修改你的远程仓库的名称。&lt;br>
master是一个分支的名称，它是git默认给你创建的本地分支的名称，你可以使用git branch命令来查看或修改你的本地分支的名称。&lt;/p>&lt;/blockquote>
&lt;p>&lt;em>&lt;strong>References.&lt;/strong>&lt;/em>&lt;br>
[1]上传文件到gitee&lt;br>
&lt;a class="link" href="https://blog.csdn.net/fayoung3568/article/details/119488325" target="_blank" rel="noopener"
>https://blog.csdn.net/fayoung3568/article/details/119488325&lt;/a>&lt;/p>
&lt;p>[2] git pull and git pull &amp;ndash;rebase&lt;br>
&lt;a class="link" href="https://www.bilibili.com/video/BV1dH4y1g7tn/?vd_source=d7d8561214ca72d815e8ee788ea8c86b" target="_blank" rel="noopener"
>https://www.bilibili.com/video/BV1dH4y1g7tn/?vd_source=d7d8561214ca72d815e8ee788ea8c86b&lt;/a>&lt;/p></description></item><item><title>Hugo Depoly</title><link>https://etherealzoom.github.io/blog/p/hugo-depoly/</link><pubDate>Mon, 07 Jul 2025 20:16:23 +0800</pubDate><guid>https://etherealzoom.github.io/blog/p/hugo-depoly/</guid><description>&lt;h2 id="hugo学习记录">Hugo学习记录
&lt;/h2>&lt;h3 id="对于main文件夹和theme文件夹的优先级">对于main文件夹和theme文件夹的优先级
&lt;/h3>&lt;p>main文件夹里面的文件优先级最高，如果main中有文件的层级与在theme中一致，那么会优先采取main中的设置。
所以为了防止theme中的源文件被修改，通常会复制一份到main文件中进行修改，这样如果出问题了，还有后悔药吃。&lt;/p>
&lt;h2 id="hugo-optimization-手记">Hugo optimization 手记
&lt;/h2>&lt;h3 id="修正时间">修正时间
&lt;/h3>&lt;p>&lt;strong>存在文章时间显示错误&lt;/strong>
&lt;em>Jul 07, 2025 -&amp;gt; 显示为 Jul 07, 80815&lt;/em>&lt;/p>
&lt;p>在netlify.toml文件夹中添加：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[context.production]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> command = &amp;#34;cd exampleSite &amp;amp;&amp;amp; hugo --gc --themesDir ../.. -b ${URL}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [context.production.environment]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HUGO_ENV = &amp;#34;production&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TZ = &amp;#34;/usr/share/ZZHAO/PRC&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="github-action">GitHub action
&lt;/h3>&lt;ol>
&lt;li>需要到github账户的developer生成TOKEN（目前是有限期一年）&lt;/li>
&lt;li>然后到blog的main仓库的设置添加token并命名为TOKEN，这是因为在本地文件的yaml文件里面的名字是TOKEN，这样可以不改此文件。
在hugo主文件创建一个.github/workflows/xxxx.yaml文件，将以下内容复制进去:&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Details&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 代码提交到main分支时触发github action&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Checkout&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;latest&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">extended&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build Web&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo -D&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy Web&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">PERSONAL_TOKEN&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.你的token变量名 }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">EXTERNAL_REPOSITORY&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">你的github名/你的仓库名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">PUBLISH_BRANCH&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">PUBLISH_DIR&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">commit_message&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">auto deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;ol start="3">
&lt;li>当有新文章后，在本地main推送上github，不是在那个public的文件&lt;/li>
&lt;li>推送上去之后，会自动GitHub Actions，修改blog网页的仓库，进而修改个人博客内容。&lt;/li>
&lt;li>Github action的好处是，不需要在public的文件夹内提交到GitHub上了，只需要在main文件夹即可。&lt;/li>
&lt;/ol>
&lt;h3 id="hugo-stack-设置双列links">hugo-stack 设置双列Links
&lt;/h3>&lt;p>在VSCode里面搜索 &lt;em>&lt;strong>custom.scss&lt;/strong>&lt;/em> 文件，然后添加下面代码即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="k">@media&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="na">min-width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.article-list--compact.links&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">grid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">grid-template-columns&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">fr&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">fr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">box-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">article&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">card-background&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">border&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">box-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">shadow-l2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-bottom&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">border-radius&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nd">:nth-child&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">odd&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-right&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="hugo-need-install-weight">hugo need install weight
&lt;/h3>&lt;ol>
&lt;li>opengraph
这部分是用来配置 Open Graph协议 的，它能让你自定义当网站链接被分享到社交媒体（如 Twitter, Facebook, Telegram 等）时，显示的预览卡片样式。
twitter:
site: 在这里填写你的 Twitter 用户名（例如 @hugo_rocks）。当你的文章被分享时，卡片上会显示 &amp;ldquo;via @你的用户名&amp;rdquo;。
card: 设置 Twitter 卡片的样式。
summary_large_image: 显示一张大的特色图片，下方是标题和描述（推荐）。
summary: 显示一张小方形图片，标题和描述在右侧&lt;/li>
&lt;li>defaultImage
这里用来设置一个默认的社交分享图片。
如果某篇文章没有指定自己的特色图片（featured_image），那么当这篇文章被分享时，就会使用这里设置的默认图片。
opengraph:
enabled: false 设为 true 来启用这个功能。
local: false 如果你的默认图片存放在 Hugo 网站的 static 文件夹下，就设为 true。如果图片是通过一个完整的 URL 链接引用的，就设为 false：
src: 填写图片的路径或完整的 URL。
如果 local: true，这里填相对路径，如 images/default-cover.jpg。
如果 local: false，这里填完整 URL，如 &lt;a class="link" href="https://example.com/images/default-cover.jpg" target="_blank" rel="noopener"
>https://example.com/images/default-cover.jpg&lt;/a>。&lt;/li>
&lt;/ol>
&lt;h3 id="剔除中英文模式只留下一种">剔除中英文模式，只留下一种
&lt;/h3>&lt;p>将整个Blog风格统一化，左侧边栏使用英文标注各个page&lt;/p>
&lt;h3 id="保留默认浅色深色模式">保留默认浅色/深色模式
&lt;/h3>&lt;p>保留原本的，不用多加颜色的，不过可以微调浅色和深色的色调，加强文字背景对比度&lt;/p>
&lt;h3 id="改善白天模式可读性">改善白天模式可读性
&lt;/h3>&lt;p>在Stack以及很多主题中，主题文件夹下的assets/scss下都提供了一个供用户自定义的custom.scss文件。
将下面代码块复制到custom.scss文件中，会对比度会更高，看得会更清晰。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">:root&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--body-background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#EBEBEB&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--accent-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#1B365D&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--accent-color-darker&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#202A44&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--accent-color-text&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#FFF&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--body-text-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#202A44&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">:root&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--card-background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#FFF&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--card-background-selected&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#EBEBEB&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--card-text-color-main&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#202A44&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--card-text-color-secondary&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#53565A&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--card-text-color-tertiary&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#888B8D&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>References.&lt;/em>&lt;br>
&lt;a class="link" href="https://oxidane-uni.github.io/p/%E4%BD%BF%E7%94%A8-hugo-%E5%AF%B9%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%87%8D%E5%BB%BA%E4%B8%8E-stack-%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E8%AE%B0%E5%BD%95/#%E6%96%B0%E5%BB%BA%E7%BD%91%E7%AB%99" target="_blank" rel="noopener"
>oxidane-uni的博客&lt;/a>&lt;/p>
&lt;h3 id="更改白天黑夜模式图标">更改白天/黑夜模式图标
&lt;/h3>&lt;p>观察网页的CSS可以发现：深色模式下图标的切换就是“一个显示，一个隐藏”，在相关文件中指定该用的图标即可。
在&lt;a class="link" href="https://tabler-icons.io/" target="_blank" rel="noopener"
>tabler&lt;/a>下载&amp;quot;sun-high&amp;quot;和&amp;quot;moon-stars&amp;quot;这两个图标，好看。
作者将黑白开关做在了侧边栏里，因而直接在有关的
.\assets\scss\partials\sidebar.scss和\layouts\partials\sidebar\left.html里指定图标即可:&lt;/p>
&lt;p>(1) 在**.\assets\scss\partials\sidebar.scss**中，修改代码为下面这样：&lt;/p>
&lt;details>
&lt;summary>Details&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>&lt;span class="nt">data-scheme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;dark&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nn">#dark-mode-toggle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">accent-color&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-weight&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">700&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.icon-tabler-sun-high&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.icon-tabler-moon-stars&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">unset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nn">#dark-mode-toggle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-top&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">body-text-color&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">align-items&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">cursor&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">pointer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">gap&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="ni">menu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="ni">icon&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">separation&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.icon-tabler-moon-stars&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;p>(2)在**\layouts\partials\sidebar\left.html**中，修改代码为下面这样，用于修改图标&lt;/p>
&lt;details>
&lt;summary>Details&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">{{ if (default false .Site.Params.colorScheme.toggle) }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;dark-mode-toggle&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;helper/icon&amp;#34; &amp;#34;sun-high&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;helper/icon&amp;#34; &amp;#34;moon-stars&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ T &amp;#34;darkMode&amp;#34; }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{ end }}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;p>&lt;em>&lt;strong>(3)修改白天/黑夜模式的文字&lt;/strong>&lt;/em>
\i18n\zh-cn.yaml中修改即可&lt;/p>
&lt;p>&lt;em>&lt;strong>(4)解决无论浅色深色都只有深色模式显示的问题&lt;/strong>&lt;/em>&lt;br>
第一步修改 left.html&lt;br>
增加浅色深色变化项目&lt;/p>
&lt;details>
&lt;summary>Details&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">//修改前
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{ if (default false .Site.Params.colorScheme.toggle) }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;dark-mode-toggle&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;helper/icon&amp;#34; &amp;#34;sun-high&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;helper/icon&amp;#34; &amp;#34;moon-stars&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ T &amp;#34;darkMode&amp;#34; }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//修改后
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{ if (default false .Site.Params.colorScheme.toggle) }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;dark-mode-toggle&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;helper/icon&amp;#34; &amp;#34;sun-high&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;helper/icon&amp;#34; &amp;#34;moon-stars&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- &amp;lt;span&amp;gt;{{ T &amp;#34;darkMode&amp;#34; }}&amp;lt;/span&amp;gt; --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;label-light&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ T &amp;#34;lightMode&amp;#34; }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;label-dark&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ T &amp;#34;darkMode&amp;#34; }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;p>第二步修改 sidebar.scss&lt;br>
增加注释内容，达到在深色浅色不同模式下，隐藏显示不同的东西&lt;/p>
&lt;details>
&lt;summary>Details&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>&lt;span class="nt">data-scheme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;dark&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nn">#dark-mode-toggle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">accent-color&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-weight&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">700&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.icon-tabler-sun-high&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.icon-tabler-moon-stars&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">unset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* 在暗色模式下，隐藏“浅色模式”的文字 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.label-light&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* 在暗色模式下，显示“暗色模式”的文字 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.label-dark&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">unset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nn">#dark-mode-toggle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-top&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">body-text-color&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">align-items&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">cursor&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">pointer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">gap&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="ni">menu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="ni">icon&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">separation&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.icon-tabler-moon-stars&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* 在亮色模式下，隐藏“暗色模式”的文字 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.label-dark&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;h3 id="添加content折叠功能">添加content折叠功能
&lt;/h3>&lt;p>Create a shortcode in /layouts/shortcodes/details.html&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">details&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">summary&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ (.Get 0) | markdownify }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">summary&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ .Inner | markdownify }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">details&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then this shortcode can be used inside the content file, in markdown, in the following way:
&lt;details>
&lt;summary>Details&lt;/summary>
&lt;p>折叠压缩&lt;/p>
&lt;/details>
&lt;/p>
&lt;p>&lt;em>References.&lt;/em>
&lt;a class="link" href="https://stackoverflow.com/questions/71691219/add-collapsible-section-in-hugo" target="_blank" rel="noopener"
>content_clapse&lt;/a>&lt;/p>
&lt;h3 id="macos-风格的代码块">macOS 风格的代码块
&lt;/h3>&lt;p>在 assets/scss/partials/layout/article.scss，找到 .highlight 部分并修改成如下:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="nc">.highlight&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="ni">pre&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">background-color&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">padding&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">card-padding&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">position&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">border-radius&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">max-width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="k">!important&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="k">!important&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">box-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">shadow-l1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">!important&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建 assets/img/code-header.svg 文件，编辑输入：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-svg" data-lang="svg">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;svg&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2000/svg&amp;#34;&lt;/span> &lt;span class="na">version=&lt;/span>&lt;span class="s">&amp;#34;1.1&amp;#34;&lt;/span> &lt;span class="na">x=&lt;/span>&lt;span class="s">&amp;#34;0px&amp;#34;&lt;/span> &lt;span class="na">y=&lt;/span>&lt;span class="s">&amp;#34;0px&amp;#34;&lt;/span> &lt;span class="na">width=&lt;/span>&lt;span class="s">&amp;#34;450px&amp;#34;&lt;/span> &lt;span class="na">height=&lt;/span>&lt;span class="s">&amp;#34;130px&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;ellipse&lt;/span> &lt;span class="na">cx=&lt;/span>&lt;span class="s">&amp;#34;65&amp;#34;&lt;/span> &lt;span class="na">cy=&lt;/span>&lt;span class="s">&amp;#34;65&amp;#34;&lt;/span> &lt;span class="na">rx=&lt;/span>&lt;span class="s">&amp;#34;50&amp;#34;&lt;/span> &lt;span class="na">ry=&lt;/span>&lt;span class="s">&amp;#34;52&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;rgb(220,60,54)&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;2&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;rgb(237,108,96)&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;ellipse&lt;/span> &lt;span class="na">cx=&lt;/span>&lt;span class="s">&amp;#34;225&amp;#34;&lt;/span> &lt;span class="na">cy=&lt;/span>&lt;span class="s">&amp;#34;65&amp;#34;&lt;/span> &lt;span class="na">rx=&lt;/span>&lt;span class="s">&amp;#34;50&amp;#34;&lt;/span> &lt;span class="na">ry=&lt;/span>&lt;span class="s">&amp;#34;52&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;rgb(218,151,33)&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;2&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;rgb(247,193,81)&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;ellipse&lt;/span> &lt;span class="na">cx=&lt;/span>&lt;span class="s">&amp;#34;385&amp;#34;&lt;/span> &lt;span class="na">cy=&lt;/span>&lt;span class="s">&amp;#34;65&amp;#34;&lt;/span> &lt;span class="na">rx=&lt;/span>&lt;span class="s">&amp;#34;50&amp;#34;&lt;/span> &lt;span class="na">ry=&lt;/span>&lt;span class="s">&amp;#34;52&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;rgb(27,161,37)&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;2&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;rgb(100,200,86)&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/svg&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后在 assets/scss/custom.scss 添加代码块的样式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 为代码块顶部添加 macos 样式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nc">.article-content&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.highlight&lt;/span>&lt;span class="nd">:before&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">content&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sx">url(/img/code-header.svg)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">25&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background-size&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">52&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background-repeat&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">no-repeat&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-top&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-bottom&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可能存在行数的问题，可以取消行数：&lt;br>
打开hugo.yaml，修改highlight部分为&lt;code>lineNos: false&lt;/code>&lt;/p>
&lt;h2 id="ednhugo-优化">EDN.hugo 优化
&lt;/h2>&lt;ol>
&lt;li>&lt;del>时间格式format为jul 7, 2025&lt;/del>&lt;/li>
&lt;li>&lt;del>将link显示改成2栏&lt;/del>&lt;/li>
&lt;li>&lt;del>设置自己的blog头像、网页小图标&lt;/del>&lt;/li>
&lt;li>&lt;del>设置Copyright © 2025 etherealzoom&lt;/del>&lt;/li>
&lt;li>&lt;del>剔除中英文模式，留中文模式作为默认，后续自己添加内容&lt;/del> &lt;br>
about部分可以中英文，一式两份&lt;/li>
&lt;li>&lt;del>保留默认colorScheme，白天/黑夜模式&lt;/del>&lt;/li>
&lt;li>&lt;del>改善白天模式的可读性&lt;/del>&lt;/li>
&lt;li>更改白天/黑夜模式图标&lt;/li>
&lt;li>&lt;del>新建一个repository作为图床&lt;/del>&lt;/li>
&lt;li>&lt;del>开启GitHub Actions&lt;/del>&lt;/li>
&lt;li>评论系统推荐giscus, better than utyerance评论系统&lt;/li>
&lt;li>加音乐播放器：Aplayer + MetingJs(优先级很低)&lt;/li>
&lt;li>&lt;del>添加content折叠功能&lt;/del>&lt;/li>
&lt;li>&lt;del>macOS 风格的代码块&lt;/del>&lt;/li>
&lt;/ol>
&lt;p>&lt;em>&lt;strong>References.Blog&lt;/strong>&lt;/em>&lt;/p>
&lt;ol>
&lt;li>&lt;a class="link" href="https://thirdshire.com/hugo-stack-renovation-part-three/" target="_blank" rel="noopener"
>第三夏尔 | Third Shire&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item></channel></rss>