[{"content":"命令\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 # 初始化一个本地仓库 git init # 添加所有文件到暂存区 git add . # 提交暂存区的文件到本地仓库，并添加一条提交信息 git commit -m \u0026#34;first commit\u0026#34; # 添加一个远程仓库的地址，命名为origin git remote add origin https://github.com/user/repo.git # 将本地仓库的内容推送到远程仓库的master分支 git push -u origin master #查看当前缓存区的all内容 git ls-files #delete a cangku 的所有提交记录 *** - 创建一个新的孤立分支，并切换到该分支：`git checkout --orphan latest_branch` - 删除原来的master分支：`git branch -D master` - 重命名当前分支为master：`git branch -m master` - 强制推送当前分支到远程仓库：`git push -f origin master` - **该操作不可逆 *** #查看当前分支数量以及名称 git branch #怎么上传一个.git所在文件中的文件夹里面的所有文件 **添加子文件夹及其内容至暂存区**： 使用`git add`命令，配合递归通配符`**`来添加子文件夹及其内部的所有文件。假设子文件夹名为`subfolder`，执行： git add subfolder/** 1 2 3 4 5 6 //显示差异摘要（每个提交修改的文件及行数统计）： git log --author=\u0026#34;当前用户名\u0026#34; --stat //以图形化方式展示分支历史 git log --author=\u0026#34;当前用户名\u0026#34; --graph //- 显示完整的提交消息： git log --author=\u0026#34;当前用户名\u0026#34; --pretty=format:\u0026#34;%h %s\u0026#34; git文件恢复 1 2 3 4 5 6 7 8 9 //没有add的文件恢复，一个一个恢复 git checkout \u0026lt;文件名\u0026gt; //有add，无commit git checkout \u0026lt;commit id\u0026gt; 文件名 #id使用git log查看 //已经commit git checkout \u0026lt;commit id\u0026gt; 文件名 ![[Pasted image 20240414204413.png]]\n知识点 1）\n1 2 3 4 5 f7cafda (HEAD -\u0026gt; master) 重新提交有关tc264开发的相关资料 d01e0e1 提交有关tc264开发的相关资料 前面的一串数字是什么意思 答： 前面的一串数字是哈希值，它是一个由 40 个十六进制字符组成的字符串，用来唯一标识每一次提交。Git 通过计算提交的内容、作者、日期等信息的 SHA-1 散列值来生成这个哈希值 1 2 3 4 (HEAD -\u0026gt; master)是什么 答： (HEAD -\u0026gt; master)是Git中的一种表示方式，它表示HEAD指向master分支，而master分支指向最新的提交。HEAD是一个特殊的引用，它总是指向当前的提交，而master是一个普通的分支，它可以指向任何一个提交。当你在master分支上进行提交时，HEAD和master都会移动到最新的提交上(https://zhuanlan.zhihu.com/p/40001702) [1]关于Git分支中HEAD和Master的理解(https://zhuanlan.zhihu.com/p/40001702)[: 关于Git分支中HEAD和Master的理解 - 知乎](https://www.jianshu.com/p/4219b6f62ce3) 3）解释git push -u origin master\n1 2 3 4 5 - git是一个分布式版本控制系统，可以用来管理和协作项目的源代码。 - push是一个git子命令，它的作用是将本地仓库的内容推送到远程仓库的指定分支。 - -u是一个参数，它的全称是–set-upstream，它的作用是设置默认的上游分支，也就是当你在本地仓库执行git pull或git push时，不需要指定远程仓库和分支名，git会自动使用你设置的上游分支。 - origin是一个远程仓库的名称，它是git默认给你添加的远程仓库的别名，你可以使用git remote命令来查看或修改你的远程仓库的名称。 - master是一个分支的名称，它是git默认给你创建的本地分支的名称，你可以使用git branch命令来查看或修改你的本地分支的名称。 4）上传文件到gitee https://blog.csdn.net/fayoung3568/article/details/119488325\n5）git pull and git pull \u0026ndash;rebase https://www.bilibili.com/video/BV1dH4y1g7tn/?vd_source=d7d8561214ca72d815e8ee788ea8c86b\n","date":"2025-07-08T02:15:15+08:00","permalink":"https://etherealzoom.github.io/blog/p/git_use/","title":"Git_use"},{"content":"京东激战美团：一场即时零售的终局之战？ 近期，京东高调宣布进军外卖行业，与行业巨头美团展开了激烈交锋，双方负责人的隔空“口水仗”更是将这场商战推向了舆论的风口浪尖。平静多年的外卖江湖，为何再起波澜？京东与美团的竞争背后，隐藏着怎样的底层逻辑？战火为何在当前时点引燃？未来，谁又更有可能成为赢家？本文将为您层层解析。\n一、探寻底层逻辑：京东与美团的模式之争 要理解这场巨头之战，我们必须剥开表面的口水仗，深入电商物流的核心，探寻其最根本的商业逻辑。\n中国的电子商务生态极为发达，其核心可以拆解为两大环节：商品交易（商流）与物流配送（物流）。仅从物流维度看，根据配送路径和时效，我们可以将其划分为三种截然不同的模式：“长链”、“中链”与“短链”。\n1. 电商物流的“长链”、“中链”与“短链” “长链”模式：一仓发全国\n“长链”电商的典型代表是阿里巴巴的淘宝、天猫以及拼多多。在这种平台模式下，消费者下单后，订单由遍布全国的卖家从各自仓库通过第三方快递发货，即所谓的 “一仓发全国”。例如，北京的消费者购买了广州卖家的商品，货物需要经历揽收、干线运输（如华南至华北）、区域转运、末端配送等多个环节，通常耗时3至5天。此模式的关键在于跨区域的干线运输效率，也正是它，催生了“三通一达”等快递巨头的崛起。\n“中链”模式：区域仓落地配\n“中链”电商的代表是京东。其核心优势在于 “自营商品 + 自建物流”。京东在全国核心城市群布局了庞大的仓储网络，商品能从离消费者最近的区域仓直接发出。例如，北京消费者的订单可能直接从河北固安的京东“亚洲一号”仓发出，经由分拣中心和市内站点，最终由配送员送货上门。这种模式砍掉了最耗时的跨区域干线运输，实现了“211限时达”或“次日达”的卓越体验，也被称为 “落地配”。\n2017年后，京东物流走向开放，补齐了干线运输能力，形成了 “中链”+“长链” 的双重能力。但其核心竞争力依然是基于“中链”的 “仓配一体化供应链解决方案”——通过销售预测，让商家提前将货备在离消费者最近的京东仓库，提供快速、确定的交付体验。这是“三通一达”目前难以企及的。\n“短链”模式：30分钟万物到家\n“短链”模式，即 “即时零售”，将商品与消费者的距离缩短至极致。消费者下单后，商品从附近3~5公里内的门店或前置仓发出，可在30分钟到1小时内送达。这种模式速度更快，能满足消费者的即时性、紧急性需求。其典型代表包括京东到家、美团闪购、盒马鲜生等。由于其模式与外卖高度同源，对于美团而言，将外卖的成功经验复制到零售领域，是其业务发展的必然延伸。\n从物流体验看，“短链”优于“中链”，而“中链”又优于“长链”。更短的交付时间意味着更优的用户体验。美团的30分钟送达，相较于京东的半日达或次日达，在时间维度上实现了数量级的超越，这正是阿里曾羡慕京东物流“确定性”，而今京东警惕美团模式的根本原因。\n2. “短链”模式的阿喀琉斯之踵 尽管“短链”模式在速度上优势显著，但其天生存在结构性短板，导致多数入局者难以盈利。\n首先，“近场”优势亦是劣势。消费者可以轻松选择线下购买，线上平台获客和复购成本高昂。尤其对于生鲜等非标品，消费者更信赖眼见为实，难以完全转移至线上。\n其次，“短链”的两种主流玩法——平台模式与自营模式，各有难点。\n平台模式（如京东到家）：嫁接于传统商超之上，但商超利润本就微薄（1%~3%），平台抽佣空间极小，盈利困难重重。 自营模式（如盒马、前置仓）：通过自建门店或仓库，试图通过优化供应链提升利润。但无论是“前店后仓”的盒马，还是纯线上的“前置仓”，都对运营能力提出了极高要求。尤其“前置仓”，若无足够订单密度和精准的库存预测，极易因高昂的租金和损耗陷入亏损。 然而，美团恰恰找到了破解之道。它利用餐饮外卖这一 “高频”业务，为即时零售这个 “低频”场景 带来了巨大且廉价的流量。这种 “高频打低频” 的策略，不仅解决了获客难题，更通过海量的用户数据，让美团能够精准洞察本地消费需求，优化商品结构和库存管理，从而逐步跑通了前置仓模式。这是一场典型的流量与数据驱动的胜利。\n二、战火为何此刻点燃？ 时间回到2015年，外卖大战正酣，京东曾有机会入局，但最终因判断市场烧钱过于惨烈而选择聚焦商超品类，成立“京东到家”。而美团则在赢得外卖战争后，于2019年顺势推出“闪购”和“买菜”业务，正式将触角伸向即时零售。\n双方的局部竞争，在2020年疫情的催化下进入白热化阶段，逐渐形成了中国即时零售市场的两极格局。\n那么，为何在2025年的今天，京东选择正面进攻美团的外卖腹地？\n增长焦虑下的必然选择：美团外卖业务增速放缓，京东核心电商业务同样面临增长瓶颈。双方都迫切需要寻找新的增长曲线。美团在即时零售领域已取得显著成效（日单量破1800万），并开始蚕食京东核心的3C、家电品类。对于京东而言，这无异于釜底抽薪。因此，进攻美团的外卖腹地，是一场“以攻为守”的战略防御。\n刘强东的回归与意志：2023年刘强东重回台前，主导京东具体业务。进攻外卖这一需要投入巨大资源的战略决策，也带有其强烈的个人风格。从业界“挖角”前美团高管郭庆，更彰显了此战的决心与野心，这远非一个职业经理人所能拍板。\n绝佳的市场进入时机：外卖市场历经残酷洗牌，已从“三足鼎立”变为“双雄争霸”。随着阿里对饿了么的投入不确定性增加，美团 фактически 享有半垄断地位和超额利润。高利润必然吸引新的竞争者。同时，监管层禁止“二选一”后，商家也乐于见到新的平台入局以分散风险。京东此时以 低佣金 策略切入，并猛攻美团骑手“五险一金”的社会痛点，不仅占据了道德高地，更以极低的成本撬动了巨大的社会关注，堪称一次教科书级的事件营销。\n三、京东能打赢这场外卖之战吗？ 要回答这个问题，我们需要审视外卖业务的两大核心能力，以及双方在这些能力上的储备。外卖消费者的核心体验，除了价格，无外乎两点：商户供给是否丰富，以及 配送是否准时高效。\n不幸的是，美团恰恰在这两方面构建了深不见底的护城河。\n护城河一：无坚不摧的“地推铁军” + 智能IT系统 美团在“千团大战”中淬炼出的 “地推+IT” 双引擎模式是其成功的基石。由干嘉伟一手打造的“地推铁军”，以惊人的执行力席卷全国，将海量线下商户接入平台。而其强大的IT系统，则能将这些线下资源高效转化为线上供给，并通过数据分析赋能商家，提升其运营效率和平台粘性。这个B端服务体系，是京东短时间内难以复制的。目前，京东的BD团队规模与美团相比，可能存在数量级的差距。\n护城河二：无可匹敌的即时配送网络 美团拥有约600万注册骑手，其 “专送+众包” 模式结合AI“超脑”调度系统，已经将平均配送时长压缩至28分钟。这个庞大、高效且具备弹性的运力网络，是美团的第二道护城河。反观京东，尽管其众包平台号称有百万骑手，但活跃数量与美团差距悬殊。更重要的是，其众包骑手的服务质量一直备受诟病。这背后，甚至还埋藏着一段与达达公司合并的历史纠葛——当年达达出于对“轻资产”模式和上市估值的追求，裁撤了原京东到家的全职骑手骨干，导致其众包体系管理和服务质量的根基受损至今。\n结论： 尽管京东此次进军外卖声势浩大，并凭借巧妙的营销策略赢得开门红。但从核心能力看，它在 商户拓展、IT系统、即时配送网络 这三大关键环节上与美团存在巨大差距。\n消费者的热情和同情是短暂的。如果京东无法投入天文数字般的资源，快速补齐BD、系统和骑手体验的短板，为用户提供持续、稳定、丰富的选择和优质的配送服务。那么在初期的补贴和热度退去后，用户大概率会重新回归选择更丰富、配送更稳定的美团。\n届时，京东外卖很可能无法撼动市场格局，最终沦为又一个食之无味、弃之可惜的“鸡肋”业务。这场战争的结局，或许从一开始就已经写在了双方的能力基因里。\n","date":"2025-07-08T00:55:10+08:00","permalink":"https://etherealzoom.github.io/blog/p/jd_vs_mt/","title":"Jd_vs_mt"},{"content":"CEO 张俊杰\n2017年，张俊杰模仿着茶颜悦色在云南开出第一家门店。当时他是羡慕着茶颜悦色，但由于茶颜悦色的奶茶原材料过于多样，进而导致供应链较为复杂（这也是茶颜悦色门店数量较少的一个重要原因：因为需要控制产品质量，市场规则所决定的不允许通过加盟的做法快速扩张）。而张俊杰一开始就想着多开门店，假如供应链过于复杂，那么对多开门店这个做法是起反作用的，所以张俊杰决定从市面上早已有成熟标准的原叶茶和鲜牛奶入手，简单的原材料意味着供应链的简单，展现了通过加盟制度快速扩张的可能性。\n有了扩张的可能性，那么怎么实现快速扩张呢？ 很重要的一个原因是张俊杰擅长造梦，擅长让他人相信一年回本，两年富裕。且张俊杰野心还很大，怀着“在全球100个国家卖出150亿杯”以及“在中国超越星巴克”的目标，也给那些加盟的人有了很大的驱动力。\n还有一个原因是，霸王茶姬的东方文化元素极多，包括但不限于马面裙等，这也给在这样一个国潮兴起的时势下那些追求潮流的年轻人提供了交流的话题等等。\n———————— 以下是deepseek拓展：\n以下是基于\u0026quot;战略定位精准+供应链优化+文化赋能+资本驱动\u0026ldquo;复合模型对霸王茶姬商业模式的系统性分析：\n一、战略定位精准：锚定“东方星巴克”的差异化路径 目标市场错位竞争\n对标星巴克文化符号：将茶饮从“解渴消费品”升级为“文化载体”，通过“东方美学空间+标准化产品”组合，抢占星巴克未能覆盖的“国风第三空间”空白市场。 价格带卡位：主力产品定价15-20元，介于蜜雪冰城（10元以下）与喜茶（25-30元）之间，精准覆盖新中产消费升级需求。 产品极简主义\n爆款逻辑：将80%资源集中于“伯牙绝弦”“桂馥兰香”等5款SKU，实现单店日均出品效率400杯（行业平均250杯）。 去地域化配方：通过降低糖度、减少地域特色原料（如云南玫瑰），使产品适配全球口味，海外门店复购率提升至35%。 二、供应链优化：构建“成本-效率-规模”飞轮 上游集约化采购\n原料锁定协议：与云南普洱茶庄园签订“期货采购”（提前3年锁定60%产能），原料成本较市场价低22%。 跨品类整合：通过蒙牛定制鲜奶产线，将乳制品损耗率从8%降至3.5%，实现“茶+奶”双供应链协同。 中台数字化管控\n智能排产系统：基于历史销售数据+天气预测，动态调整区域分仓配货量，库存周转天数压缩至5.8天（行业平均12天）。 IoT设备监控：在5000+门店部署物联网传感器，实时监测冷藏温度、设备状态，故障响应时间缩短至2小时。 下游轻资产扩张\n“中央厨房+卫星店”模式：在省会城市设立中央厨房覆盖半径300公里内的加盟店，单店后厨面积减少60%，租金成本下降18%。 三、文化赋能：从“产品消费”到“符号消费”的升维 文化符号的工业化复制\n视觉系统标准化：将故宫纹样、戏曲脸谱等元素拆解为可批量应用的模块（如杯身图案库含120种组合），设计成本降低74%。 场景化营销：在成都春熙路旗舰店引入“茶艺剧场”，将点茶流程戏剧化表演，单店客单价提升26%。 亚文化圈层裂变\n汉服社群运营：推出“买茶饮送马面裙配饰”活动，联动全国200+汉服社团，带动相关门店销售额增长41%。 元宇宙试水：发行“千里江山图”数字茶票NFT，持有者可兑换限定产品，3天内售罄并吸引12万Z世代用户注册会员。 全球化文化适配\n在地化改造：在马来西亚将“伯牙绝弦”改名为“Jasmine Tea Latte”，融合拉茶工艺，成为当地TikTok饮品榜TOP3。 四、资本驱动：构建“加盟-金融-生态”三位一体模型 加盟商杠杆化扩张\n现金流游戏规则：收取加盟费（38万/店）+供应链利润（原料加价15%）+抽成（营业额3%），单店年均贡献收入超50万元。 加盟商分级激励：设立“城市合伙人”制度，头部加盟商可参股区域子公司，年化收益率可达30%。 资本工具创新\nABS资产证券化：将优质门店未来现金流打包发行债券，2023年融资8亿元用于东南亚市场拓展。 供应链金融：通过“仓单质押”为中小加盟商提供低息贷款，贷款余额年增速达220%。 生态型投资布局\n跨界控股：收购云南普洱茶厂、参股冷链物流公司，控制产业链关键节点，综合毛利率提升至68%。 战略联盟：与字节跳动合作开发“AI茶艺师”小程序，实现精准营销投放ROI达1:7.3。 模型协同效应分析 战略与供应链联动：极简产品战略降低供应链复杂度→支撑快速加盟扩张→规模效应反哺供应链议价能力。 文化与资本共振：国潮IP吸引年轻客群→提升单店营收→吸引更多加盟商→资本加速门店网络扩张→文化影响力进一步放大。 风险对冲机制：通过供应链控制（原料锁价）、文化多样性（全球化改造）、资本工具（ABS）构建抗周期能力。 结论：新茶饮2.0时代的范式创新 霸王茶姬的复合模型本质是**“用文化溢价覆盖供应链成本，用资本杠杆放大规模效应”**，其核心壁垒在于：\n文化资产的可复制性（如马面裙设计无需高成本迭代） 供应链的强控制力（从茶园到茶杯的垂直整合） 资本参与的深度绑定（加盟商既是投资者又是传播者） 未来若能在“文化疲劳周期”（约3-5年）内完成向“生活方式平台”的转型（如拓展茶器、茶礼、茶空间衍生品），或将成为首个突破千亿市值的新茶饮品牌。\n","date":"2025-07-08T00:50:42+08:00","permalink":"https://etherealzoom.github.io/blog/p/%E9%9C%B8%E7%8E%8B%E8%8C%B6%E5%A7%AC/","title":"霸王茶姬"},{"content":"hugo need install weight utyerance评论系统 加音乐播放器：Aplayer + MetingJs widgets homepage 小组件 opengraph 这部分是用来配置 Open Graph协议 的，它能让你自定义当网站链接被分享到社交媒体（如 Twitter, Facebook, Telegram 等）时，显示的预览卡片样式。 twitter:\nsite: 在这里填写你的 Twitter 用户名（例如 @hugo_rocks）。当你的文章被分享时，卡片上会显示 \u0026ldquo;via @你的用户名\u0026rdquo;。\ncard: 设置 Twitter 卡片的样式。\nsummary_large_image: 显示一张大的特色图片，下方是标题和描述（推荐）。\nsummary: 显示一张小方形图片，标题和描述在右侧\ndefaultImage 这里用来设置一个默认的社交分享图片。 如果某篇文章没有指定自己的特色图片（featured_image），那么当这篇文章被分享时，就会使用这里设置的默认图片。\nopengraph:\nenabled: false 设为 true 来启用这个功能。\nlocal: false 如果你的默认图片存放在 Hugo 网站的 static 文件夹下，就设为 true。如果图片是通过一个完整的 URL 链接引用的，就设为 false。\nsrc: 填写图片的路径或完整的 URL。\n如果 local: true，这里填相对路径，如 images/default-cover.jpg。\n如果 local: false，这里填完整 URL，如 https://example.com/images/default-cover.jpg。\ncolorScheme 这部分控制网站的主题颜色模式（白天/黑夜模式）。 toggle: true 设为 true 会在网站上显示一个切换按钮 ☀️/🌙，让访问者可以手动在浅色和深色模式之间切换。 default: auto 设置网站的默认颜色模式。 auto: （推荐） 自动根据访问者操作系统的设置来显示浅色或深色模式。 light: 强制默认显示浅色模式。 dark: 强制默认显示深色模式。 GitHub action 需要到github账户的developer生成TOKEN（目前是有限期一年） 然后到blog的main仓库的设置添加token并命名为TOKEN，这是因为在本地文件的yaml文件里面的名字是TOKEN，这样可以不改此文件。 在hugo主文件创建一个.github/workflows/xxxx.yaml文件，将以下内容复制进去: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 name: deploy # 代码提交到main分支时触发github action on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build Web run: hugo -D - name: Deploy Web uses: peaceiris/actions-gh-pages@v4 with: PERSONAL_TOKEN: ${{ secrets.你的token变量名 }} EXTERNAL_REPOSITORY: 你的github名/你的仓库名 PUBLISH_BRANCH: main PUBLISH_DIR: ./public commit_message: auto deploy 当有新文章后，在本地main推送上github，不是在那个public的文件 推送上去之后，会自动GitHub Actions，修改blog网页的仓库，进而修改个人博客内容。 Github action的好处是，不需要在public的文件夹内提交到GitHub上了，只需要在main文件夹即可。 ","date":"2025-07-07T20:16:23+08:00","permalink":"https://etherealzoom.github.io/blog/p/hugo-depoly/","title":"hugo depoly"}]