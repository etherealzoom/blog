<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IC on etherealzoom</title><link>https://etherealzoom.github.io/blog/categories/ic/</link><description>Recent content in IC on etherealzoom</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>etherealzoom</copyright><lastBuildDate>Wed, 09 Jul 2025 21:56:37 +0800</lastBuildDate><atom:link href="https://etherealzoom.github.io/blog/categories/ic/index.xml" rel="self" type="application/rss+xml"/><item><title>从Xring O1说开来</title><link>https://etherealzoom.github.io/blog/p/%E4%BB%8Exring-o1%E8%AF%B4%E5%BC%80%E6%9D%A5/</link><pubDate>Wed, 09 Jul 2025 21:56:37 +0800</pubDate><guid>https://etherealzoom.github.io/blog/p/%E4%BB%8Exring-o1%E8%AF%B4%E5%BC%80%E6%9D%A5/</guid><description>&lt;h2 id="玄戒o1芯片架构">玄戒O1芯片架构
&lt;/h2>&lt;h3 id="芯片基础">芯片基础
&lt;/h3>&lt;p>&lt;em>&lt;strong>CPU:&lt;/strong>&lt;/em> 基于ARMv9.2指令集架构的Cortex CPU集群&lt;br>
&lt;em>&lt;strong>GPU:&lt;/strong>&lt;/em> ARM的Immortalis GPU IP&lt;br>
&lt;em>&lt;strong>系统级设计:&lt;/strong>&lt;/em> 玄戒O1芯片的互联技术采用了ARM的CoreLink系统IP
&lt;img src="https://raw.githubusercontent.com/etherealzoom/blog_img/main/Pic/20250709222546138.png"
loading="lazy"
alt="SoC Architecture"
>&lt;/p>
&lt;h3 id="cpu架构">CPU架构
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>十核四丛集设计&lt;br>
Cortex-X925 3.9GHz *2&lt;br>
-&amp;gt; 最高主频达3.9GHz，表现超越业界标准设计，是小米玄戒团队通过大量创新和数百次版图迭代优化的结果&lt;br>
Cortex-A725 3.4GHz *4&lt;br>
Cortex-A725 1.9GHz *2&lt;br>
Cortex-A520 1.8GHz *2&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ultra-fast Micro Control Unit-on chip&lt;br>
在硬件上实现对各个核的调度&lt;/p>
&lt;/li>
&lt;li>
&lt;p>缓存结构&lt;br>
&lt;em>数据保存的位置离使用的位置越近，性能越高，降低延迟核功耗&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>玄戒团队三个提高主频的方法&lt;br>
(1) 优化供电网络设计：边缘供电+空间组网&lt;br>
玄戒团队将主供电单元移到SoC两侧，缩短逻辑单元的物理距离&lt;br>
(2) 自研多种3nm标准单元Std Cell&lt;br>
(3) 电路版图全链路迭代优化+人工精调&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="npu">NPU
&lt;/h3>&lt;p>玄戒O1内置6核NPU，集成Scalar标量加速器、Vector矢量加速器和Tensor张量加速器，NPU算力可达44 TOPS ，支持多算法并行计算。在拍摄时，可并行“拍照”和“预览”算法，不仅满足计算摄影的影像算法需求，更针对小米自有的端侧模型进行了硬件底层的深度定制。&lt;br>
配合全新第三代小米端侧模型，AI处理速度更快，同时功耗更低，使手机在智能语音助手、图像识别、智能场景优化等AI应用方面表现更加出色。&lt;/p>
&lt;h3 id="isp">ISP
&lt;/h3>&lt;p>xiaomi自研第四代ISP单元&lt;/p>
&lt;h2 id="芯片设计开发流程">芯片设计开发流程
&lt;/h2>&lt;h3 id="total">Total
&lt;/h3>&lt;p>定义与架构设计 -&amp;gt;&lt;br>
Design, Verification, Logic Synthesis, STA, DFT (前端设计) -&amp;gt;&lt;br>
版图规划, 布局布线, 寄生参数提取和时序分析, 版图物理验证 (后端设计) -&amp;gt;&lt;br>
生成GDSII文件, Tape-out流片&lt;/p>
&lt;h3 id="第一阶段定义与架构设计前端设计的起点">&lt;strong>第一阶段：定义与架构设计（前端设计的起点）&lt;/strong>
&lt;/h3>&lt;p>这是将市场需求转化为技术规格的阶段，决定了芯片“做什么”和“怎么做”。&lt;/p>
&lt;p>&lt;strong>1. 市场需求与规格定义 (Specification)&lt;/strong>&lt;br>
一切始于一个问题：“我们要做一颗什么样的芯片？” 产品经理和市场团队会根据目标应用提出需求，定义芯片需要达到的核心指标，即&lt;strong>PPA&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>性能 (Performance)&lt;/strong>：例如，CPU主频要达到多少GHz，AI算力要达到多少TOPS。&lt;/li>
&lt;li>&lt;strong>功耗 (Power)&lt;/strong>：待机功耗、峰值功耗的上限是多少毫瓦。&lt;/li>
&lt;li>&lt;strong>面积 (Area)&lt;/strong>：芯片的物理尺寸有多大，这直接关系到成本。&lt;/li>
&lt;/ul>
&lt;p>最终会输出一份详尽的《产品规格说明书》。&lt;/p>
&lt;p>&lt;strong>2. 架构设计 (Architecture Design)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>选择核心IP&lt;/strong>：是自研CPU/GPU，还是向ARM、Synopsys等公司购买现成的IP核？&lt;/li>
&lt;li>&lt;strong>划分功能模块&lt;/strong>：将芯片划分为不同的功能单元，如计算模块、存储模块、接口模块（USB, PCIe）等。&lt;/li>
&lt;li>&lt;strong>设计总线结构&lt;/strong>：确定这些模块之间如何高效地通信。&lt;/li>
&lt;li>&lt;strong>建立系统模型&lt;/strong>：使用SystemC等语言对整个系统进行建模和仿真，初步验证架构的可行性，并对PPA进行早期评估。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="第二阶段数字前端设计与验证从想法到代码">&lt;strong>第二阶段：数字前端设计与验证（从想法到代码）&lt;/strong>
&lt;/h3>&lt;p>这是将架构思想转化为具体硬件描述代码，并确保其功能正确性的核心阶段。&lt;strong>在整个芯片开发中，验证占据了约70%的时间和资源&lt;/strong>，其重要性不言而喻。&lt;/p>
&lt;p>&lt;strong>1. RTL设计 (Register-Transfer Level Design)&lt;/strong>&lt;br>
使用HDL(&lt;strong>Verilog&lt;/strong>等)，将每个模块的具体功能以代码形式描述出来。&lt;br>
&lt;em>&lt;strong>RTL&lt;/strong>&lt;/em>是一种设计思想和抽象层次, 描述的是数据在寄存器之间的流动和处理方式。&lt;br>
&lt;code>将一个复杂的数字系统，看作是一系列在时钟信号驱动下，数据在寄存器之间进行传输和处理的过程。它描述了在某个时间点，什么数据，从哪里，经过什么运算，传送到了哪里。&lt;/code>&lt;br>
&lt;em>&lt;strong>HDL&lt;/strong>&lt;/em>是将RTL思想用一种标准化的代码形式写出来。s&lt;/p>
&lt;p>&lt;strong>2. 功能验证 (Functional Verification)&lt;/strong>&lt;br>
验证工程师用尽一切办法证明RTL设计是错误的直至没有错误。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>搭建验证平台&lt;/strong>：使用SystemVerilog和UVM等行业标准，建立一个复杂的测试环境。&lt;/li>
&lt;li>&lt;strong>编写测试用例&lt;/strong>：通过定向测试和随机测试，模拟各种可能的用户场景和极端（Corner Case）条件。&lt;/li>
&lt;li>&lt;strong>仿真与调试&lt;/strong>：在EDA仿真工具（如Synopsys VCS, Cadence Xcelium）中运行测试用例，将RTL代码的输出与预期结果进行比对，找出并修复Bug。这是一个漫长且不断迭代的过程。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>3. 逻辑综合 (Logic Synthesis)&lt;/strong>&lt;br>
验证通过的RTL代码，需要从行为描述转化为实际的电路结构。逻辑综合工具（如Synopsys Design Compiler）会自动将RTL代码翻译成&lt;strong>门级网表（Gate-Level Netlist）&lt;/strong>。在此阶段，需要设定时序、功耗和面积的约束，工具会尽力在满足这些约束的前提下进行优化。&lt;/p>
&lt;p>&lt;strong>4. 静态时序分析 (STA) 与等价性检查&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>静态时序分析&lt;/strong>：确保信号能在时钟的驱动下，在指定的时间内从一个触发器稳定地传到下一个触发器，满足时序要求。&lt;/li>
&lt;li>&lt;strong>等价性检查&lt;/strong>：形式化验证的一种，确保综合后的门级网表在逻辑功能上与原始的RTL代码完全一致。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>STA 的核心目标是：确保芯片能跑得够快。&lt;/strong>&lt;/p>
&lt;p>它是一种验证方法，用于检查数字电路中的所有信号是否能在规定的时间内，从一个寄存器（触发器）稳定地传输到下一个寄存器，从而满足芯片的设计频率要求。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>工作方式&lt;/strong>：STA 工具会分析电路中成千上万条逻辑路径，计算信号在每条路径上的传输延迟。它不关心信号的具体逻辑功能（是0还是1），只关心信号的传播速度。&lt;/li>
&lt;li>&lt;strong>检查内容&lt;/strong>：
&lt;ul>
&lt;li>&lt;strong>建立时间违例 (Setup Violation)&lt;/strong>：信号到达得&lt;strong>太慢&lt;/strong>了，在下一个时钟周期到来时还没准备好，会导致数据采样错误。这是决定芯片最高能跑多快的关键。&lt;/li>
&lt;li>&lt;strong>保持时间违例 (Hold Violation)&lt;/strong>：信号变化得&lt;strong>太快&lt;/strong>了，旧数据没保持足够长的时间，干扰了新数据的稳定，同样会导致错误。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>地位&lt;/strong>：STA 是数字后端设计（物理设计）流程中的关键“签核 (Sign-off)”步骤之一。只有通过了 STA，才能确保芯片的时序性能达标。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>5. 可测试性设计DFT (Design For Testability)&lt;/strong>&lt;/p>
&lt;p>DFT的核心目标是：确保芯片造出来之后是“好”的还是“坏”的，并且能快速地找出的坏点。一颗芯片包含数十亿个晶体管，在制造过程中，难免会出现各种微小的物理缺陷（如短路、断路）。如果不对芯片进行测试，就无法保证交付给客户的产品是功能完好的。&lt;br>
DFT 就是在设计阶段，预先在电路中&lt;strong>植入一些额外的“测试专用”逻辑&lt;/strong>，使得芯片在生产出来后，能够方便、高效地被自动化测试设备（ATE）进行大规模测试。&lt;br>
可以把 DFT 想象成给一个复杂的建筑物预先设计好了&lt;strong>检修通道和传感器接口&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>工作方式&lt;/strong>：DFT工程师会在芯片中插入“扫描链（Scan Chains）”，将成千上万个内部的寄存器连接成一条或多条长长的“串珠”，这样测试设备就可以像移位寄存器一样，从外部灌入测试码，并读出内部状态，极大地提高了内部节点的可控性和可观测性。&lt;/li>
&lt;li>&lt;strong>主要技术&lt;/strong>：
&lt;ul>
&lt;li>&lt;strong>扫描链设计 (Scan Chain)&lt;/strong>：将内部状态“暴露”出来。&lt;/li>
&lt;li>&lt;strong>内建自测试 (BIST, Built-in Self-Test)&lt;/strong>：让芯片的一部分电路（如内存）能够自己测试自己，生成测试码并验证结果。&lt;/li>
&lt;li>&lt;strong>自动测试码生成 (ATPG)&lt;/strong>：使用工具自动生成能够最大程度覆盖各种潜在物理缺陷的测试码。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>地位&lt;/strong>：DFT 是连接设计与制造和量产的关键环节。好的 DFT 设计能显著降低测试成本、提高产品良率、并帮助快速定位失效原因。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>ASIC 与 FPGA 的岔路口&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>ASIC&lt;/strong>：我们目前描述的流程主要针对ASIC。它的目标是设计一款功能固定、性能和功耗最优的定制芯片，适用于大规模量产。&lt;/li>
&lt;li>&lt;strong>FPGA&lt;/strong>：如果项目追求快速上市或产量不大，可以选择FPGA。FPGA内部有预先制造好的逻辑单元和布线资源。其流程在RTL和功能验证后，跳过了复杂的物理设计，直接使用FPGA厂商（如Xilinx/AMD）提供的工具进行综合、布局布线，并生成一个Bitstream烧录到芯片中。开发周期短、成本低，但性能和功耗通常不如同等功能的ASIC。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;hr>
&lt;h3 id="第三阶段数字后端设计物理设计从代码到版图">&lt;strong>第三阶段：数字后端设计/物理设计（从代码到版图）&lt;/strong>
&lt;/h3>&lt;p>这是将抽象的门级网表转化为具体的、可供制造的物理版图的过程，是连接设计与制造的桥梁。&lt;/p>
&lt;p>&lt;strong>1. 版图规划 (Floorplanning)&lt;/strong>&lt;br>
规划芯片的宏观布局，包括确定芯片的核心区域大小，放置IO引脚，以及摆放CPU、SRAM等大型模块的预留位置。&lt;/p>
&lt;p>&lt;strong>2. 布局与布线 (Placement &amp;amp; Routing)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>布局&lt;/strong>：EDA工具（如Synopsys IC Compiler, Cadence Innovus）会将数百万个标准逻辑单元精确地放置到规划好的区域内。&lt;/li>
&lt;li>&lt;strong>时钟树综合 (CTS)&lt;/strong>：生成一个能将时钟信号同步、低延迟地传送到芯片上所有触发器的网络。&lt;/li>
&lt;li>&lt;strong>布线&lt;/strong>：用金属导线将所有单元根据网表的连接关系连接起来。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>3. 签核 (Sign-off)&lt;/strong>&lt;/p>
&lt;p>在将最终设计成果交付给晶圆厂之前，必须进行一系列严格的最终检查，确保万无一失。这个过程被称为“签核”。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>DRC (设计规则检查)&lt;/strong>：确保版图符合晶圆厂的制造工艺规则，比如导线最小宽度、最小间距等。&lt;/li>
&lt;li>&lt;strong>LVS (版图与原理图对比)&lt;/strong>：确保最终版图的电路连接关系与综合后的门级网表完全一致。&lt;/li>
&lt;li>&lt;strong>寄生参数提取与时序分析&lt;/strong>：从版图中提取实际的电阻、电容等寄生参数，进行最终的、最精确的静态时序分析，确保芯片在实际物理效应下依然满足性能要求。&lt;/li>
&lt;/ul>
&lt;p>当所有检查都通过后，设计数据（GDSII）将被正式“&lt;strong>流片（Tape-out）&lt;/strong>”，传送给芯片代工厂。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>关于模拟电路设计&lt;/strong>&lt;/p>
&lt;p>值得一提的是，SoC中通常还包含模拟电路（如电源管理、锁相环PLL、数模转换器ADC等）。模拟电路的设计流程与数字电路截然不同，它更像一门“艺术”，高度依赖工程师的经验。其设计过程以晶体管级的电路图设计和SPICE仿真为主，版图设计通常需要手动绘制，对寄生效应极其敏感，是一个不断仿真、调整、再仿真的迭代过程。&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="第四阶段制造封测与验证">&lt;strong>第四阶段：制造、封测与验证&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>1. 芯片制造 (Fabrication)&lt;/strong>
晶圆厂接手GDSII数据后，开始在纯净的硅晶圆上，通过光刻、刻蚀、离子注入、薄膜沉积等数百道极其复杂的工序，层层叠加，最终形成设计好的电路结构。这个过程通常需要数月时间。&lt;/p>
&lt;p>&lt;strong>2. 封装与测试 (Packaging &amp;amp; Testing)&lt;/strong>
制造完成的晶圆会被切割成一个个独立的芯片裸片Die。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>封装&lt;/strong>：将脆弱的裸片固定在基板上，并连接好与外部电路板通信的引脚，最后用绝缘外壳保护起来，形成我们日常见到的芯片模样。&lt;/li>
&lt;li>&lt;strong>测试&lt;/strong>：对封装好的芯片进行功能和性能测试，剔除在制造或封装过程中产生的次品。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>3. 投产后验证 (Post-Silicon Validation)&lt;/strong>&lt;br>
第一批流片回来的芯片会被送到实验室，在真实的硬件环境中进行上电和测试。这个阶段旨在发现那些在仿真环境中难以暴露的、与真实物理世界交互的Bug，并对芯片的各项性能指标进行最终的实测验证。&lt;/p>
&lt;p>经过这一系列严苛的流程，一颗合格的芯片才算真正诞生，准备投入大规模生产，并最终进入到消费者的电子产品中。&lt;/p>
&lt;p>&lt;em>&lt;strong>References.&lt;/strong>&lt;/em>&lt;br>
[1] &lt;a class="link" href="https://www.bilibili.com/video/BV18sJHz5ENR/?share_source=copy_web&amp;amp;vd_source=9ffe3740cc87c3869a8fd1a2a7aa9ac5" target="_blank" rel="noopener"
>极客湾&lt;/a>&lt;br>
[2] &lt;a class="link" href="https://www.bilibili.com/video/BV1yB7aztECc/?share_source=copy_web&amp;amp;vd_source=9ffe3740cc87c3869a8fd1a2a7aa9ac5" target="_blank" rel="noopener"
>老石谈芯&lt;/a>&lt;/p></description></item></channel></rss>